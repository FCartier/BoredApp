{"ast":null,"code":"var _jsxFileName = \"/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"../counter/Counter.module.css\";\nimport { Input, Modal } from \"antd\";\nimport DashboardTable from \"./DashboardTable\";\nimport Button from \"../../components/Button\";\nimport { fetchActivity, fetchActivities, selectActivities, setSearchedValue } from \"./dashboardSlice\";\nconst {\n  Search\n} = Input;\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const activities = useSelector(selectActivities);\n  const dashboardStatus = useSelector(state => state.dashboard.status);\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n  /*\n  <div className=\"favourite\">\n        <Button shape=\"flat\" onClick={handleRefreshActivities}>\n          Your Favourites\n        </Button>\n      </div>\n  */\n\n  const handleRandomActivity = () => {\n    dispatch(fetchActivity());\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Quarantine ideas\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Welcome, an Other\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"refresh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    shape: \"flat\",\n    onClick: () => dispatch(fetchActivities()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Refresh ideas\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"Search by Type or Name\",\n    onSearch: value => dispatch(setSearchedValue(value.toLocaleLowerCase())),\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"generator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    shape: \"flat\",\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Generate\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DashboardTable, {\n    data: activities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    visible: showModal,\n    onOk: () => setShowModal(false),\n    onCancel: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/Dashboard.js"],"names":["React","useState","useEffect","useSelector","useDispatch","styles","Input","Modal","DashboardTable","Button","fetchActivity","fetchActivities","selectActivities","setSearchedValue","Search","Dashboard","dispatch","showModal","setShowModal","activities","dashboardStatus","state","dashboard","status","handleRandomActivity","value","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"../counter/Counter.module.css\";\n\nimport { Input, Modal } from \"antd\";\nimport DashboardTable from \"./DashboardTable\";\nimport Button from \"../../components/Button\";\nimport {\n  fetchActivity,\n  fetchActivities,\n  selectActivities,\n  setSearchedValue\n} from \"./dashboardSlice\";\n\nconst { Search } = Input;\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const activities = useSelector(selectActivities);\n  const dashboardStatus = useSelector(state => state.dashboard.status);\n\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n\n  /*\n<div className=\"favourite\">\n        <Button shape=\"flat\" onClick={handleRefreshActivities}>\n          Your Favourites\n        </Button>\n      </div>\n  */\n\n  const handleRandomActivity = () => {\n    dispatch(fetchActivity());\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <h1>Quarantine ideas</h1>\n        <h3>Welcome, an Other</h3>\n      </div>\n\n      <div className=\"refresh\">\n        <Button shape=\"flat\" onClick={() => dispatch(fetchActivities())}>\n          Refresh ideas\n        </Button>\n      </div>\n      <div className=\"searchbar\">\n        <Search\n          placeholder=\"Search by Type or Name\"\n          onSearch={value =>\n            dispatch(setSearchedValue(value.toLocaleLowerCase()))\n          }\n          enterButton\n        />\n      </div>\n      <div className=\"generator\">\n        <Button shape=\"flat\" onClick={() => setShowModal(true)}>\n          Generate\n        </Button>\n      </div>\n      <div className=\"grid\">\n        <DashboardTable data={activities} />\n      </div>\n      <Modal\n        visible={showModal}\n        onOk={() => setShowModal(false)}\n        onCancel={() => setShowModal(false)}\n      ></Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}