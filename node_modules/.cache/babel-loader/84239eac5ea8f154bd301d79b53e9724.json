{"ast":null,"code":"var _jsxFileName = \"/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Button, Input, Modal } from \"antd\";\nimport DashboardTable from \"./DashboardTable\";\nimport DashBoardModal from \"./DashBoardModal\";\nimport { fetchActivity, fetchActivities, selectActivities, setSearchedValue } from \"./dashboardSlice\";\nconst {\n  Search\n} = Input;\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const activities = useSelector(selectActivities);\n  const dashboardStatus = useSelector(state => state.dashboard.status);\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n\n  const handleRandomActivity = () => {\n    dispatch(fetchActivity());\n    setShowModal(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Quarantine ideas\")), /*#__PURE__*/React.createElement(RefreshButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    shape: \"flat\",\n    onClick: () => dispatch(fetchActivities()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Refresh ideas\")), /*#__PURE__*/React.createElement(SearchWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    placeholder: \"Search by Type or Name\",\n    onSearch: value => dispatch(setSearchedValue(value.toLocaleLowerCase())),\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ActivityGeneratorWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    shape: \"flat\",\n    onClick: () => handleRandomActivity(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Generate\")), /*#__PURE__*/React.createElement(TableWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DashboardTable, {\n    data: activities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    visible: showModal,\n    onOk: () => setShowModal(false),\n    onCancel: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DashBoardModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })));\n}\nconst SearchBar = styled(Search)`\n  width: 20em;\n  border-radius: 90px;\n`;\nconst SearchWrapper = styled.div`\n  grid-area: searchbar;\n  margin-top: 3em;\n  margin-bottom: 3em;\n`;\nconst Header = styled.div`\n  grid-area: header;\n  font-size: 2em;\n  margin-top: 3em;\n  width: 100%;\n  justify-self: center;\n  text-align: center;\n`;\nconst RefreshButtonWrapper = styled.div`\n  grid-area: refresh;\n  margin-top: 3em;\n  margin-bottom: 3em;\n`;\nconst ActivityGeneratorWrapper = styled.div`\n  grid-area: generator;\n  margin-top: 3em;\n  margin-bottom: 3em;\n`;\nconst TableWrapper = styled.div`\n  grid-area: table;\n  align-self: center;\n  justify-self: center;\n  width: 80%;\n`;","map":{"version":3,"sources":["/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/Dashboard.js"],"names":["React","useState","useEffect","useSelector","useDispatch","styled","Button","Input","Modal","DashboardTable","DashBoardModal","fetchActivity","fetchActivities","selectActivities","setSearchedValue","Search","Dashboard","dispatch","showModal","setShowModal","activities","dashboardStatus","state","dashboard","status","handleRandomActivity","value","toLocaleLowerCase","SearchBar","SearchWrapper","div","Header","RefreshButtonWrapper","ActivityGeneratorWrapper","TableWrapper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,QAAqC,MAArC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,aADF,EAEEC,eAFF,EAGEC,gBAHF,EAIEC,gBAJF,QAKO,kBALP;AAOA,MAAM;AAAEC,EAAAA;AAAF,IAAaR,KAAnB;AAEA,eAAe,SAASS,SAAT,GAAqB;AAClC,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMmB,UAAU,GAAGjB,WAAW,CAACU,gBAAD,CAA9B;AACA,QAAMQ,eAAe,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,MAA1B,CAAnC;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,eAAe,KAAK,MAAxB,EAAgC;AAC9BJ,MAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AACD;AACF,GAJQ,EAIN,CAACS,eAAD,EAAkBJ,QAAlB,CAJM,CAAT;;AAMA,QAAMQ,oBAAoB,GAAG,MAAM;AACjCR,IAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACAQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAKA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,eAIE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,EAAE,MAAMF,QAAQ,CAACL,eAAe,EAAhB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAJF,eASE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,wBADd;AAEE,IAAA,QAAQ,EAAEc,KAAK,IACbT,QAAQ,CAACH,gBAAgB,CAACY,KAAK,CAACC,iBAAN,EAAD,CAAjB,CAHZ;AAKE,IAAA,WAAW,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,eAkBE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,EAAE,MAAMF,oBAAoB,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAlBF,eAuBE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEL,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAvBF,eA0BE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEF,SADX;AAEE,IAAA,IAAI,EAAE,MAAMC,YAAY,CAAC,KAAD,CAF1B;AAGE,IAAA,QAAQ,EAAE,MAAMA,YAAY,CAAC,KAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA1BF,CADF;AAoCD;AAED,MAAMS,SAAS,GAAGvB,MAAM,CAACU,MAAD,CAAS;;;CAAjC;AAKA,MAAMc,aAAa,GAAGxB,MAAM,CAACyB,GAAI;;;;CAAjC;AAMA,MAAMC,MAAM,GAAG1B,MAAM,CAACyB,GAAI;;;;;;;CAA1B;AASA,MAAME,oBAAoB,GAAG3B,MAAM,CAACyB,GAAI;;;;CAAxC;AAMA,MAAMG,wBAAwB,GAAG5B,MAAM,CAACyB,GAAI;;;;CAA5C;AAMA,MAAMI,YAAY,GAAG7B,MAAM,CAACyB,GAAI;;;;;CAAhC","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { Button, Input, Modal } from \"antd\";\nimport DashboardTable from \"./DashboardTable\";\nimport DashBoardModal from \"./DashBoardModal\";\nimport {\n  fetchActivity,\n  fetchActivities,\n  selectActivities,\n  setSearchedValue\n} from \"./dashboardSlice\";\n\nconst { Search } = Input;\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const activities = useSelector(selectActivities);\n  const dashboardStatus = useSelector(state => state.dashboard.status);\n\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n\n  const handleRandomActivity = () => {\n    dispatch(fetchActivity());\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <Header>\n        <h1>Quarantine ideas</h1>\n      </Header>\n      <RefreshButtonWrapper>\n        <Button shape=\"flat\" onClick={() => dispatch(fetchActivities())}>\n          Refresh ideas\n        </Button>\n      </RefreshButtonWrapper>\n      <SearchWrapper>\n        <SearchBar\n          placeholder=\"Search by Type or Name\"\n          onSearch={value =>\n            dispatch(setSearchedValue(value.toLocaleLowerCase()))\n          }\n          enterButton\n        />\n      </SearchWrapper>\n      <ActivityGeneratorWrapper>\n        <Button shape=\"flat\" onClick={() => handleRandomActivity()}>\n          Generate\n        </Button>\n      </ActivityGeneratorWrapper>\n      <TableWrapper>\n        <DashboardTable data={activities} />\n      </TableWrapper>\n      <Modal\n        visible={showModal}\n        onOk={() => setShowModal(false)}\n        onCancel={() => setShowModal(false)}\n      >\n        <DashBoardModal />\n      </Modal>\n    </>\n  );\n}\n\nconst SearchBar = styled(Search)`\n  width: 20em;\n  border-radius: 90px;\n`;\n\nconst SearchWrapper = styled.div`\n  grid-area: searchbar;\n  margin-top: 3em;\n  margin-bottom: 3em;\n`;\n\nconst Header = styled.div`\n  grid-area: header;\n  font-size: 2em;\n  margin-top: 3em;\n  width: 100%;\n  justify-self: center;\n  text-align: center;\n`;\n\nconst RefreshButtonWrapper = styled.div`\n  grid-area: refresh;\n  margin-top: 3em;\n  margin-bottom: 3em;\n`;\n\nconst ActivityGeneratorWrapper = styled.div`\n  grid-area: generator;\n  margin-top: 3em;\n  margin-bottom: 3em;\n`;\n\nconst TableWrapper = styled.div`\n  grid-area: table;\n  align-self: center;\n  justify-self: center;\n  width: 80%;\n`;\n"]},"metadata":{},"sourceType":"module"}