{"ast":null,"code":"var _jsxFileName = \"/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/DashboardTable.js\";\nimport React from \"react\";\nimport { Image, Table, Spin } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { selectActivitiesAreLoading } from \"./dashboardSlice\";\nimport StatusEnum from \"../../constants/StatusEnum\";\nconst columns = [{\n  title: \"\",\n  dataIndex: \"imageUrl\",\n  key: \"imageUrl\",\n  render: url => /*#__PURE__*/React.createElement(Image, {\n    src: url,\n    width: 220,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 20\n    }\n  })\n}, {\n  title: \"Activity\",\n  dataIndex: \"activity\",\n  key: \"activity\",\n  sorter: (a, b) => a.activity.localeCompare(b.activity)\n}, {\n  title: \"Type\",\n  dataIndex: \"type\",\n  key: \"type\",\n  sorter: (a, b) => a.type.localeCompare(b.type)\n}, {\n  title: \"Participants\",\n  dataIndex: \"participants\",\n  key: \"participants\",\n  sorter: (a, b) => a.participants - b.participants\n}, {\n  title: \"Price\",\n  dataIndex: \"price\",\n  key: \"price\",\n  sorter: (a, b) => a.price - b.price\n}, {\n  title: \"Accessibility\",\n  dataIndex: \"accessibility\",\n  key: \"accessibility\",\n  sorter: (a, b) => a.accessibility - b.accessibility\n}];\nexport default function DashboardTable({\n  data\n}) {\n  const status = useSelector(selectActivitiesAreLoading);\n  const pagination = {\n    pageSize: 10,\n    size: \"small\",\n    simple: true\n  };\n\n  if (status !== StatusEnum.succeeded) {\n    return /*#__PURE__*/React.createElement(Center, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: data,\n    pagination: pagination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  });\n}\nconst Center = styled.div`\n  margin: auto;\n`;","map":{"version":3,"sources":["/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/DashboardTable.js"],"names":["React","Image","Table","Spin","useSelector","styled","selectActivitiesAreLoading","StatusEnum","columns","title","dataIndex","key","render","url","sorter","a","b","activity","localeCompare","type","participants","price","accessibility","DashboardTable","data","status","pagination","pageSize","size","simple","succeeded","Center","div"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Image, Table, Spin } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { selectActivitiesAreLoading } from \"./dashboardSlice\";\nimport StatusEnum from \"../../constants/StatusEnum\";\n\nconst columns = [\n  {\n    title: \"\",\n    dataIndex: \"imageUrl\",\n    key: \"imageUrl\",\n    render: url => <Image src={url} width={220} />\n  },\n  {\n    title: \"Activity\",\n    dataIndex: \"activity\",\n    key: \"activity\",\n    sorter: (a, b) => a.activity.localeCompare(b.activity)\n  },\n  {\n    title: \"Type\",\n    dataIndex: \"type\",\n    key: \"type\",\n    sorter: (a, b) => a.type.localeCompare(b.type)\n  },\n  {\n    title: \"Participants\",\n    dataIndex: \"participants\",\n    key: \"participants\",\n    sorter: (a, b) => a.participants - b.participants\n  },\n  {\n    title: \"Price\",\n    dataIndex: \"price\",\n    key: \"price\",\n    sorter: (a, b) => a.price - b.price\n  },\n  {\n    title: \"Accessibility\",\n    dataIndex: \"accessibility\",\n    key: \"accessibility\",\n    sorter: (a, b) => a.accessibility - b.accessibility\n  }\n];\n\nexport default function DashboardTable({ data }) {\n  const status = useSelector(selectActivitiesAreLoading);\n\n  const pagination = {\n    pageSize: 10,\n    size: \"small\",\n    simple: true\n  };\n\n  if (status !== StatusEnum.succeeded) {\n    return (\n      <Center>\n        <Spin size=\"large\" />\n      </Center>\n    );\n  }\n\n  return <Table columns={columns} dataSource={data} pagination={pagination} />;\n}\n\nconst Center = styled.div`\n  margin: auto;\n`;\n"]},"metadata":{},"sourceType":"module"}