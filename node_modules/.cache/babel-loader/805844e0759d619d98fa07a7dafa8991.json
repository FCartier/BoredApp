{"ast":null,"code":"var _jsxFileName = \"/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"../counter/Counter.module.css\";\nimport { Input } from \"antd\";\nimport DashboardTable from \"./DashboardTable\";\nimport DashboardCard from \"./DashboardCard\";\nimport Button from \"../../components/Button\";\nimport { fetchActivities, fetchActivitiesByType, selectActivities } from \"./dashboardSlice\";\nimport { SyncOutlined } from \"@ant-design/icons\";\nconst {\n  Search\n} = Input;\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const activities = useSelector(selectActivities);\n  const dashboardStatus = useSelector(state => state.dashboard.status);\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n\n  const handleRefreshActivities = () => {\n    dispatch(fetchActivities());\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Logo\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Welcome, an Other\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favourite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleRefreshActivities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SyncOutlined, {\n    style: {\n      fontSize: \"3em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"refresh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleRefreshActivities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SyncOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"Search by Type or Name\",\n    onSearch: value => dispatch(fetchActivitiesByType(value)),\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"generator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Generate\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DashboardTable, {\n    data: activities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/Dashboard.js"],"names":["React","useState","useEffect","useSelector","useDispatch","styles","Input","DashboardTable","DashboardCard","Button","fetchActivities","fetchActivitiesByType","selectActivities","SyncOutlined","Search","Dashboard","dispatch","activities","dashboardStatus","state","dashboard","status","handleRefreshActivities","fontSize","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AAEA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SACEC,eADF,EAEEC,qBAFF,EAGEC,gBAHF,QAIO,kBAJP;AAKA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaR,KAAnB;AAEA,eAAe,SAASS,SAAT,GAAqB;AAClC,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,UAAU,GAAGd,WAAW,CAACS,gBAAD,CAA9B;AAEA,QAAMM,eAAe,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,MAA1B,CAAnC;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,eAAe,KAAK,MAAxB,EAAgC;AAC9BF,MAAAA,QAAQ,CAACN,eAAe,EAAhB,CAAR;AACD;AACF,GAJQ,EAIN,CAACQ,eAAD,EAAkBF,QAAlB,CAJM,CAAT;;AAMA,QAAMM,uBAAuB,GAAG,MAAM;AACpCN,IAAAA,QAAQ,CAACN,eAAe,EAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEY,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CALF,eAUE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVF,eAeE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,wBADd;AAEE,IAAA,QAAQ,EAAEE,KAAK,IAAIR,QAAQ,CAACL,qBAAqB,CAACa,KAAD,CAAtB,CAF7B;AAGE,IAAA,WAAW,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfF,eAsBE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAtBF,eAyBE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEP,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzBF,CADF;AA+BD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"../counter/Counter.module.css\";\n\nimport { Input } from \"antd\";\nimport DashboardTable from \"./DashboardTable\";\nimport DashboardCard from \"./DashboardCard\";\nimport Button from \"../../components/Button\";\nimport {\n  fetchActivities,\n  fetchActivitiesByType,\n  selectActivities\n} from \"./dashboardSlice\";\nimport { SyncOutlined } from \"@ant-design/icons\";\n\nconst { Search } = Input;\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const activities = useSelector(selectActivities);\n\n  const dashboardStatus = useSelector(state => state.dashboard.status);\n\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n\n  const handleRefreshActivities = () => {\n    dispatch(fetchActivities());\n  };\n\n  return (\n    <>\n      <div className=\"logo\">\n        <h1>Logo</h1>\n        <h3>Welcome, an Other</h3>\n      </div>\n      <div className=\"favourite\">\n        <Button onClick={handleRefreshActivities}>\n          <SyncOutlined style={{ fontSize: \"3em\" }} />\n        </Button>\n      </div>\n      <div className=\"refresh\">\n        <Button onClick={handleRefreshActivities}>\n          <SyncOutlined />\n        </Button>\n      </div>\n      <div className=\"searchbar\">\n        <Search\n          placeholder=\"Search by Type or Name\"\n          onSearch={value => dispatch(fetchActivitiesByType(value))}\n          enterButton\n        />\n      </div>\n      <div className=\"generator\">\n        <Button>Generate</Button>\n      </div>\n      <div className=\"table\">\n        <DashboardTable data={activities} />\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}