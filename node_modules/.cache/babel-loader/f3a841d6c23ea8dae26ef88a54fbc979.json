{"ast":null,"code":"var _jsxFileName = \"/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/DashboardTable.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchActivities, selectActivities } from \"./dashboardSlice\";\nimport { Table, Tag, Space } from \"antd\";\nconst columns = [{\n  title: \"Activity\",\n  dataIndex: \"activity\",\n  key: \"activity\",\n  render: text => /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, text),\n  sorter: (a, b) => a.length - b.length\n}, {\n  title: \"Type\",\n  dataIndex: \"type\",\n  key: \"type\",\n  sorter: (a, b) => a.type.length - b.type.length\n}, {\n  title: \"Participants\",\n  dataIndex: \"participants\",\n  key: \"participants\",\n  sorter: (a, b) => a.participants - b.participants\n}, {\n  title: \"Price\",\n  dataIndex: \"price\",\n  key: \"price\",\n  sorter: (a, b) => a.price - b.price\n}, {\n  title: \"Image\",\n  dataIndex: \"imageUrl\",\n  key: \"imageUrl\"\n}];\nexport default function DashboardTable() {\n  const data = useSelector(selectActivities);\n  const dispatch = useDispatch();\n  const dashboardStatus = useSelector(state => {\n    console.log(state);\n    return \"idle\";\n  });\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n  return /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/DashboardTable.js"],"names":["React","useEffect","useSelector","useDispatch","fetchActivities","selectActivities","Table","Tag","Space","columns","title","dataIndex","key","render","text","sorter","a","b","length","type","participants","price","DashboardTable","data","dispatch","dashboardStatus","state","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,kBAAlD;AAEA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,QAAkC,MAAlC;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,SAAS,EAAE,UAFb;AAGEC,EAAAA,GAAG,EAAE,UAHP;AAIEC,EAAAA,MAAM,EAAEC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ,CAJlB;AAKEC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC;AALjC,CADc,EAQd;AACER,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,GAAG,EAAE,MAHP;AAIEG,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,IAAF,CAAOD,MAAP,GAAgBD,CAAC,CAACE,IAAF,CAAOD;AAJ3C,CARc,EAcd;AACER,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,SAAS,EAAE,cAFb;AAGEC,EAAAA,GAAG,EAAE,cAHP;AAIEG,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,YAAF,GAAiBH,CAAC,CAACG;AAJvC,CAdc,EAoBd;AACEV,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,GAAG,EAAE,OAHP;AAIEG,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,KAAF,GAAUJ,CAAC,CAACI;AAJhC,CApBc,EA0Bd;AACEX,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,SAAS,EAAE,UAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CA1Bc,CAAhB;AAiCA,eAAe,SAASU,cAAT,GAA0B;AACvC,QAAMC,IAAI,GAAGrB,WAAW,CAACG,gBAAD,CAAxB;AACA,QAAMmB,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,eAAe,GAAGvB,WAAW,CAACwB,KAAK,IAAI;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,MAAP;AACD,GAHkC,CAAnC;AAKAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,eAAe,KAAK,MAAxB,EAAgC;AAC9BD,MAAAA,QAAQ,CAACpB,eAAe,EAAhB,CAAR;AACD;AACF,GAJQ,EAIN,CAACqB,eAAD,EAAkBD,QAAlB,CAJM,CAAT;AAKA,sBAAO,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEf,OAAhB;AAAyB,IAAA,UAAU,EAAEc,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchActivities, selectActivities } from \"./dashboardSlice\";\n\nimport { Table, Tag, Space } from \"antd\";\n\nconst columns = [\n  {\n    title: \"Activity\",\n    dataIndex: \"activity\",\n    key: \"activity\",\n    render: text => <a>{text}</a>,\n    sorter: (a, b) => a.length - b.length\n  },\n  {\n    title: \"Type\",\n    dataIndex: \"type\",\n    key: \"type\",\n    sorter: (a, b) => a.type.length - b.type.length\n  },\n  {\n    title: \"Participants\",\n    dataIndex: \"participants\",\n    key: \"participants\",\n    sorter: (a, b) => a.participants - b.participants\n  },\n  {\n    title: \"Price\",\n    dataIndex: \"price\",\n    key: \"price\",\n    sorter: (a, b) => a.price - b.price\n  },\n  {\n    title: \"Image\",\n    dataIndex: \"imageUrl\",\n    key: \"imageUrl\"\n  }\n];\n\nexport default function DashboardTable() {\n  const data = useSelector(selectActivities);\n  const dispatch = useDispatch();\n  const dashboardStatus = useSelector(state => {\n    console.log(state);\n    return \"idle\";\n  });\n\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n  return <Table columns={columns} dataSource={data} />;\n}\n"]},"metadata":{},"sourceType":"module"}