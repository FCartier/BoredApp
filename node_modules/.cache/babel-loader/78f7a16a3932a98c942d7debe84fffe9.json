{"ast":null,"code":"var _jsxFileName = \"/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Input, Modal } from \"antd\";\nimport DashboardTable from \"./DashboardTable\";\nimport DashBoardModal from \"./DashBoardModal\";\nimport Button from \"../../components/Button\";\nimport { fetchActivity, fetchActivities, selectActivities, setSearchedValue, selectRandomActivity, selectRandomActivityStatus } from \"./dashboardSlice\";\nconst {\n  Search\n} = Input;\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const activities = useSelector(selectActivities);\n  const randomActivityStatus = useSelector(selectRandomActivityStatus);\n  const randomActivity = useSelector(selectRandomActivity);\n  const dashboardStatus = useSelector(state => state.dashboard.status);\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n  /*\n  <div className=\"favourite\">\n        <Button shape=\"flat\" onClick={handleRefreshActivities}>\n          Your Favourites\n        </Button>\n      </div>\n  */\n\n  const handleRandomActivity = () => {\n    dispatch(fetchActivity());\n    setShowModal(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Quarantine ideas\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"refresh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    shape: \"flat\",\n    onClick: () => dispatch(fetchActivities()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Refresh ideas\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledSearch, {\n    placeholder: \"Search by Type or Name\",\n    onSearch: value => dispatch(setSearchedValue(value.toLocaleLowerCase())),\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"generator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    shape: \"flat\",\n    onClick: () => handleRandomActivity(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Generate\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DashboardTable, {\n    data: activities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    visible: showModal,\n    onOk: () => setShowModal(false),\n    onCancel: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DashBoardModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n}\nconst StyledSearch = styled(Search)`\n  width: 20em;\n  border-radius: 90px;\n`;\nconst Header = styled.div`\n  grid-area: header;\n  display: grid;\n  font-size: 2em;\n  margin-top: 3em;\n  width: 100%;\n`;","map":{"version":3,"sources":["/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/Dashboard.js"],"names":["React","useState","useEffect","useSelector","useDispatch","styled","Input","Modal","DashboardTable","DashBoardModal","Button","fetchActivity","fetchActivities","selectActivities","setSearchedValue","selectRandomActivity","selectRandomActivityStatus","Search","Dashboard","dispatch","showModal","setShowModal","activities","randomActivityStatus","randomActivity","dashboardStatus","state","dashboard","status","handleRandomActivity","value","toLocaleLowerCase","StyledSearch","Header","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { Input, Modal } from \"antd\";\nimport DashboardTable from \"./DashboardTable\";\nimport DashBoardModal from \"./DashBoardModal\";\nimport Button from \"../../components/Button\";\nimport {\n  fetchActivity,\n  fetchActivities,\n  selectActivities,\n  setSearchedValue,\n  selectRandomActivity,\n  selectRandomActivityStatus\n} from \"./dashboardSlice\";\n\nconst { Search } = Input;\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const activities = useSelector(selectActivities);\n  const randomActivityStatus = useSelector(selectRandomActivityStatus);\n  const randomActivity = useSelector(selectRandomActivity);\n  const dashboardStatus = useSelector(state => state.dashboard.status);\n\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n\n  /*\n<div className=\"favourite\">\n        <Button shape=\"flat\" onClick={handleRefreshActivities}>\n          Your Favourites\n        </Button>\n      </div>\n  */\n\n  const handleRandomActivity = () => {\n    dispatch(fetchActivity());\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <Header>\n        <span>Quarantine ideas</span>\n      </Header>\n      <div className=\"refresh\">\n        <Button shape=\"flat\" onClick={() => dispatch(fetchActivities())}>\n          Refresh ideas\n        </Button>\n      </div>\n      <div className=\"searchbar\">\n        <StyledSearch\n          placeholder=\"Search by Type or Name\"\n          onSearch={value =>\n            dispatch(setSearchedValue(value.toLocaleLowerCase()))\n          }\n          enterButton\n        />\n      </div>\n      <div className=\"generator\">\n        <Button shape=\"flat\" onClick={() => handleRandomActivity()}>\n          Generate\n        </Button>\n      </div>\n      <div className=\"grid\">\n        <DashboardTable data={activities} />\n      </div>\n      <Modal\n        visible={showModal}\n        onOk={() => setShowModal(false)}\n        onCancel={() => setShowModal(false)}\n      >\n        <DashBoardModal />\n      </Modal>\n    </>\n  );\n}\n\nconst StyledSearch = styled(Search)`\n  width: 20em;\n  border-radius: 90px;\n`;\n\nconst Header = styled.div`\n  grid-area: header;\n  display: grid;\n  font-size: 2em;\n  margin-top: 3em;\n  width: 100%;\n`;\n"]},"metadata":{},"sourceType":"module"}