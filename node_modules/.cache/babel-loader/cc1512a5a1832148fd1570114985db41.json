{"ast":null,"code":"var _jsxFileName = \"/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/DashboardTable.js\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchActivities, selectActivities } from \"./dashboardSlice\";\nimport { Table, Tag, Space } from \"antd\";\nconst columns = [{\n  title: \"Activity\",\n  dataIndex: \"activity\",\n  key: \"activity\",\n  render: text => /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, text)\n}, {\n  title: \"Type\",\n  dataIndex: \"type\",\n  key: \"type\"\n}, {\n  title: \"Participants\",\n  dataIndex: \"participants\",\n  key: \"participants\"\n}, {\n  title: \"Price\",\n  dataIndex: \"price\",\n  key: \"price\"\n}, {\n  title: \"Image\",\n  dataIndex: \"imageUrl\",\n  key: \"imageUrl\"\n}];\nexport default function DashboardTable() {\n  const dashboardStatus = useSelector(state => state.dashboard.status);\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n  const data = useSelector(selectActivities);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/F.Cartier/workspace/PushGround/client/client/src/features/dashboard/DashboardTable.js"],"names":["React","useState","useSelector","useDispatch","fetchActivities","selectActivities","Table","Tag","Space","columns","title","dataIndex","key","render","text","DashboardTable","dashboardStatus","state","dashboard","status","useEffect","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,kBAAlD;AAEA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,QAAkC,MAAlC;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,SAAS,EAAE,UAFb;AAGEC,EAAAA,GAAG,EAAE,UAHP;AAIEC,EAAAA,MAAM,EAAEC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ;AAJlB,CADc,EAOd;AACEJ,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAPc,EAYd;AACEF,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,SAAS,EAAE,cAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAZc,EAiBd;AACEF,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAjBc,EAsBd;AACEF,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,SAAS,EAAE,UAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAtBc,CAAhB;AA6BA,eAAe,SAASG,cAAT,GAA0B;AACvC,QAAMC,eAAe,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,MAA1B,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIJ,eAAe,KAAK,MAAxB,EAAgC;AAC9BK,MAAAA,QAAQ,CAACjB,eAAe,EAAhB,CAAR;AACD;AACF,GAJQ,EAIN,CAACY,eAAD,EAAkBK,QAAlB,CAJM,CAAT;AAKA,QAAMC,IAAI,GAAGpB,WAAW,CAACG,gBAAD,CAAxB;AACA,QAAMgB,QAAQ,GAAGlB,WAAW,EAA5B;AACA,sBAAO,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEM,OAAhB;AAAyB,IAAA,UAAU,EAAEa,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchActivities, selectActivities } from \"./dashboardSlice\";\n\nimport { Table, Tag, Space } from \"antd\";\n\nconst columns = [\n  {\n    title: \"Activity\",\n    dataIndex: \"activity\",\n    key: \"activity\",\n    render: text => <a>{text}</a>\n  },\n  {\n    title: \"Type\",\n    dataIndex: \"type\",\n    key: \"type\"\n  },\n  {\n    title: \"Participants\",\n    dataIndex: \"participants\",\n    key: \"participants\"\n  },\n  {\n    title: \"Price\",\n    dataIndex: \"price\",\n    key: \"price\"\n  },\n  {\n    title: \"Image\",\n    dataIndex: \"imageUrl\",\n    key: \"imageUrl\"\n  }\n];\n\nexport default function DashboardTable() {\n  const dashboardStatus = useSelector(state => state.dashboard.status);\n\n  useEffect(() => {\n    if (dashboardStatus === \"idle\") {\n      dispatch(fetchActivities());\n    }\n  }, [dashboardStatus, dispatch]);\n  const data = useSelector(selectActivities);\n  const dispatch = useDispatch();\n  return <Table columns={columns} dataSource={data} />;\n}\n"]},"metadata":{},"sourceType":"module"}